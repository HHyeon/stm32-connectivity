<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="group__event" kind="group">
    <compoundname>event</compoundname>
    <title>WHD Event handling API</title>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__event_1ga9c74af353c83a8f77097acbc65362b07" prot="public" static="no">
        <type>void *(*</type>
        <definition>typedef void*(* whd_event_handler_t) (whd_interface_t ifp, const whd_event_header_t *event_header, const uint8_t *event_data, void *handler_user_data)</definition>
        <argsstring>)(whd_interface_t ifp, const whd_event_header_t *event_header, const uint8_t *event_data, void *handler_user_data)</argsstring>
        <name>whd_event_handler_t</name>
        <briefdescription>
<para>Event handler prototype definition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event_header</parametername>
</parameternamelist>
<parameterdescription>
<para>whd event header </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event_data</parametername>
</parameternamelist>
<parameterdescription>
<para>event data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler_user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>semaphore data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="174" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__event_1gad693f00ea3008fa9645582df236ad7e2" prot="public" static="no">
        <type>void *(*</type>
        <definition>typedef void*(* whd_error_handler_t) (whd_driver_t whd_driver, const uint8_t *error_type, const uint8_t *event_data, void *handler_user_data)</definition>
        <argsstring>)(whd_driver_t whd_driver, const uint8_t *error_type, const uint8_t *event_data, void *handler_user_data)</argsstring>
        <name>whd_error_handler_t</name>
        <briefdescription>
<para>Error handler prototype definition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>whd_driver</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd driver </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error_type</parametername>
</parameternamelist>
<parameterdescription>
<para>whd error type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event_data</parametername>
</parameternamelist>
<parameterdescription>
<para>event data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler_user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>semaphore data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="187" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__event_1gac5d9ab8403fb9ca24facc32b821dd53b" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t subtype</definition>
        <argsstring></argsstring>
        <name>subtype</name>
        <briefdescription>
<para>Vendor specific..32769. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="115" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1ga1892eba2086d12ac2b09005aeb09ea3b" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t length</definition>
        <argsstring></argsstring>
        <name>length</name>
        <briefdescription>
<para>Length of ethernet header. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="116" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1gab22abc2906422da61885ac6c8e6a1a59" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t version</definition>
        <argsstring></argsstring>
        <name>version</name>
        <briefdescription>
<para>Version is 0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="117" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1ga5d81eb4d4b4a5b8d3a89be061d06b64d" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t oui[3]</definition>
        <argsstring>[3]</argsstring>
        <name>oui</name>
        <briefdescription>
<para>Organizationally Unique Identifier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="118" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1gae9ad9911fe2a5dc5789001a2b48d5c9d" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t usr_subtype</definition>
        <argsstring></argsstring>
        <name>usr_subtype</name>
        <briefdescription>
<para>User specific data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="119" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1gaecece25a401285d039a6f30991dad78e" prot="public" static="no" mutable="no">
        <type><ref refid="structwhd__mac__t" kindref="compound">whd_mac_t</ref></type>
        <definition>whd_mac_t destination_address</definition>
        <argsstring></argsstring>
        <name>destination_address</name>
        <briefdescription>
<para>Ethernet destination address. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="127" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1gaceb7473ccdf9d41c5b6aee7a0264972a" prot="public" static="no" mutable="no">
        <type><ref refid="structwhd__mac__t" kindref="compound">whd_mac_t</ref></type>
        <definition>whd_mac_t source_address</definition>
        <argsstring></argsstring>
        <name>source_address</name>
        <briefdescription>
<para>Ethernet source address. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="128" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1gaa9296c58dc24c63c4ee927db394a97d7" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t ethertype</definition>
        <argsstring></argsstring>
        <name>ethertype</name>
        <briefdescription>
<para>Ethertype for identifying event packets. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="129" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1gab6d7b6f8c2ceaba7acda80aaf05f4899" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t version</definition>
        <argsstring></argsstring>
        <name>version</name>
        <briefdescription>
<para>Version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="137" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1ga1e87af3c18a2fd36c61faf89949bdc3f" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
<para>see flags below </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="138" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1ga45def65890de0da17bc0d6e2ca2b3a9f" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t event_type</definition>
        <argsstring></argsstring>
        <name>event_type</name>
        <briefdescription>
<para>Event type indicating a response from firmware for IOCTLs/IOVARs sent. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="139" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1gade20423e91627f07e610924cb0081623" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t status</definition>
        <argsstring></argsstring>
        <name>status</name>
        <briefdescription>
<para>Status code corresponding to any event type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="140" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1ga5ac0b16c31813f87b98e97cc5bacd64a" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t reason</definition>
        <argsstring></argsstring>
        <name>reason</name>
        <briefdescription>
<para>Reason code associated with the event occurred. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="141" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1ga6d9c484262d9d2e9fceaa54a2e58b3c0" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t auth_type</definition>
        <argsstring></argsstring>
        <name>auth_type</name>
        <briefdescription>
<para>WLC_E_AUTH: 802.11 AUTH request. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="142" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1ga20ef2f8b0dc25d28c0c76be72919a60a" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t datalen</definition>
        <argsstring></argsstring>
        <name>datalen</name>
        <briefdescription>
<para>Length of data in event message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="143" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1ga7c939001af591772db111e0be822b469" prot="public" static="no" mutable="no">
        <type><ref refid="structwhd__mac__t" kindref="compound">whd_mac_t</ref></type>
        <definition>whd_mac_t addr</definition>
        <argsstring></argsstring>
        <name>addr</name>
        <briefdescription>
<para>Station address (if applicable) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="144" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1ga6416f2a9886b328d85974b42f5a34ce5" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char ifname[WHD_MSG_IFNAME_MAX]</definition>
        <argsstring>[WHD_MSG_IFNAME_MAX]</argsstring>
        <name>ifname</name>
        <briefdescription>
<para>name of the incoming packet interface </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="145" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1gaee54e454588cb953b7f349e589c2d09f" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t ifidx</definition>
        <argsstring></argsstring>
        <name>ifidx</name>
        <briefdescription>
<para>destination OS i/f index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="146" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1gaa2c53e1708eb89382779539506cb4359" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t bsscfgidx</definition>
        <argsstring></argsstring>
        <name>bsscfgidx</name>
        <briefdescription>
<para>source bsscfg index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="147" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1gae36ac55a3c73f9f7dfa065165130b39e" prot="public" static="no" mutable="no">
        <type><ref refid="whd__events_8h_1a31915a18541e6182e926247a3b8ed3dc" kindref="member">whd_event_ether_header_t</ref></type>
        <definition>whd_event_ether_header_t eth</definition>
        <argsstring></argsstring>
        <name>eth</name>
        <briefdescription>
<para>Variable to store ethernet destination, source and ethertype in event packets. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="155" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1ga304eef8ceefeab88f71947f57df3d61b" prot="public" static="no" mutable="no">
        <type><ref refid="whd__events_8h_1a8e7e9d5ab8841a160aa9e2420c636864" kindref="member">whd_event_eth_hdr_t</ref></type>
        <definition>whd_event_eth_hdr_t eth_evt_hdr</definition>
        <argsstring></argsstring>
        <name>eth_evt_hdr</name>
        <briefdescription>
<para>Variable to store ethernet header fields in event message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="156" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__event_1gaaca5889552f0d7a52f681e7b96d53720" prot="public" static="no" mutable="no">
        <type>whd_event_header_t</type>
        <definition>whd_event_header_t whd_event</definition>
        <argsstring></argsstring>
        <name>whd_event</name>
        <briefdescription>
<para>Variable to store rest of the event packet fields after ethernet header. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="157" column="1" bodyfile="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="">
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__event_1ga4175c3ef9bb16601fabc605fadeaf8d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_wifi_set_event_handler</definition>
        <argsstring>(whd_interface_t ifp, const uint32_t *event_type, whd_event_handler_t handler_func, void *handler_user_data, uint16_t *event_index)</argsstring>
        <name>whd_wifi_set_event_handler</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>event_type</declname>
        </param>
        <param>
          <type><ref refid="group__event_1ga9c74af353c83a8f77097acbc65362b07" kindref="member">whd_event_handler_t</ref></type>
          <declname>handler_func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handler_user_data</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>event_index</declname>
        </param>
        <briefdescription>
<para>Registers a handler to receive event callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This function registers a callback handler to be notified when a particular event is received.</para>
<para><simplesect kind="note"><para>Currently each event may only be registered to one handler and there is a limit to the number of simultaneously registered events. Maximum of 5 event handlers can registered simultaneously, this also includes the internal event handler registration which happens during scan, join and starting an AP.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event_type</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the event list array </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler_func</parametername>
</parameternamelist>
<parameterdescription>
<para>A function pointer to the handler callback </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler_user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer value which will be passed to the event handler function at the time an event is triggered (NULL is allowed) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Entry where the event handler is registered in the list</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS or Error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__event_1ga2072e91b840217584cfd60ad540b3146" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_wifi_set_error_handler</definition>
        <argsstring>(whd_interface_t ifp, const uint8_t *error_nums, whd_error_handler_t handler_func, void *handler_user_data, uint16_t *error_index)</argsstring>
        <name>whd_wifi_set_error_handler</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>error_nums</declname>
        </param>
        <param>
          <type><ref refid="group__event_1gad693f00ea3008fa9645582df236ad7e2" kindref="member">whd_error_handler_t</ref></type>
          <declname>handler_func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>handler_user_data</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>error_index</declname>
        </param>
        <briefdescription>
<para>Registers a handler to receive error callbacks. </para>
        </briefdescription>
        <detaileddescription>
<para>This function registers a callback handler to be notified when a particular event is received.</para>
<para><simplesect kind="note"><para>Currently each event may only be registered to one handler and there is a limit to the number of simultaneously registered events. Maximum of 5 event handlers can registered simultaneously, this also includes the internal event handler registration which happens during scan, join and starting an AP.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error_nums</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the event list as WLC_ERR_BUS and WLC_ERR_FW </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler_func</parametername>
</parameternamelist>
<parameterdescription>
<para>A function pointer to the handler callback </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler_user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer value which will be passed to the event handler function at the time an event is triggered (NULL is allowed) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Entry where the error handler is registered in the list</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS or Error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__event_1gae415f1f3fcbbfe506aa0e656bf8debb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_wifi_deregister_event_handler</definition>
        <argsstring>(whd_interface_t ifp, uint16_t event_index)</argsstring>
        <name>whd_wifi_deregister_event_handler</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>event_index</declname>
        </param>
        <briefdescription>
<para>Delete/Deregister the event entry where callback is registered. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Event index obtained during registration by whd_wifi_set_event_handler</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS or Error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="242" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__event_1gaa7f28d32a8c06c7df471636de6f4dec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t whd_wifi_deregister_error_handler</definition>
        <argsstring>(whd_interface_t ifp, uint16_t error_index)</argsstring>
        <name>whd_wifi_deregister_error_handler</name>
        <param>
          <type><ref refid="whd_8h_1a2e544c482ddbb690bbb95ce7174e79a0" kindref="member">whd_interface_t</ref></type>
          <declname>ifp</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>error_index</declname>
        </param>
        <briefdescription>
<para>Delete/Deregister the error entry where callback is registered. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ifp</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to handle instance of whd interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>error_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Error index obtained during registration by whd_wifi_set_error_handler</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHD_SUCCESS or Error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jia-Shyr.Chuang@infineon.com/Documents/01.SRC/whd/inc/whd_events.h" line="251" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions that allow user applications to receive event callbacks and set event handlers. </para>
    </briefdescription>
    <detaileddescription>
<para>Functions that allow user applications to receive error callbacks and set error handlers.</para>
    </detaileddescription>
  </compounddef>
</doxygen>
